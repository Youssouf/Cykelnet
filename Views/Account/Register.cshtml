@model Cykelnet.Models.RegisterModel
@{
    ViewBag.Title = "Register";
}
<section class="main" id="registerSection">
<h2>
    Create a New Account</h2>
<p>
    Use the form below to create a new account.
</p>
<p>
    Passwords are required to be a minimum of @Membership.MinRequiredPasswordLength
    characters in length.
</p>
<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
<div style="width: 35%">
    @using (Html.BeginForm("Register", "Account", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.ValidationSummary(true, "Account creation was unsuccessful. Please correct the errors and try again.")
        <div>
            <fieldset>
                <legend>Account Information</legend>
                <fieldset>
                    <legend>Profile Information</legend>
                    <div class="editor-label">
                        @Html.LabelFor(m => m.UserName)
                    </div>
                    <div class="editor-field">
                        @Html.TextBoxFor(m => m.UserName)
                        @Html.ValidationMessageFor(m => m.UserName)
                    </div>
                    <div class="editor-label">
                        @Html.LabelFor(m => m.Email)
                    </div>
                    <div class="editor-field">
                        @Html.TextBoxFor(m => m.Email)
                        @Html.ValidationMessageFor(m => m.Email)
                    </div>

                    <div class="editor-label">
                        @Html.LabelFor(m => m.CyclistType)
                    </div>
                    <div class="editor-field">
                        @Html.DropDownListFor(m => m.CyclistType, new SelectList(Model.CyclistTypes, "Value", "Text"))
                        @Html.ValidationMessageFor(m => m.CyclistType)
                    </div>
                    <div class="editor-label">
                        @Html.LabelFor(m => m.Avatar)
                    </div>
                    <div class="editor-field">
                        <input type="file" name="ImageUrl" />
                        @Html.ValidationMessageFor(m => m.Avatar)
                    </div>
                
                </fieldset>
                <fieldset>
                    <legend>Personal Information</legend>
                    <div class="editor-label">
                        @Html.LabelFor(m => m.FullName)
                    </div>
                    <div class="editor-field">
                        @Html.TextBoxFor(m => m.FullName)
                    </div>
                    <div class="editor-label">
                        @Html.LabelFor(m => m.Address1)
                    </div>
                    <div class="editor-field">
                        @Html.TextBoxFor(m => m.Address1)
                    </div>
                    <div class="editor-label">
                        @Html.LabelFor(m => m.Address2)
                    </div>
                    <div class="editor-field">
                        @Html.TextBoxFor(m => m.Address2)
                    </div>
                    <div class="editor-label">
                        @Html.LabelFor(m => m.Country)
                    </div>
                    <div class="editor-field">
                         @Html.DropDownListFor(m => m.Country, new SelectList(Model.Countries, "Value", "Text"))
                    </div>
                    <div class="editor-label">
                        @Html.LabelFor(m => m.BirthdayDay)
                    </div>
                    <div class="editor-field">
                        @Html.DropDownListFor(m => m.BirthdayDay, new SelectList(Model.BirthdayDates, "Value", "Text"))
                        @Html.DropDownListFor(m => m.BirthdayMonth, new SelectList(Model.BirthdayMonths, "Value", "Text"))
                        @Html.DropDownListFor(m => m.BirthdayYear, new SelectList(Model.BirthdayYears, "Value", "Text"))
                        @Html.ValidationMessageFor(m => m.BirthdayDay)

                    </div>
                </fieldset>
                
                <fieldset>
                    <legend>Password</legend>
                    <div class="editor-label">
                        @Html.LabelFor(m => m.Password)
                    </div>
                    <div class="editor-field">
                        @Html.PasswordFor(m => m.Password)
                        @Html.ValidationMessageFor(m => m.Password)
                    </div>
                    <div class="editor-label">
                        @Html.LabelFor(m => m.ConfirmPassword)
                    </div>
                    <div class="editor-field">
                        @Html.PasswordFor(m => m.ConfirmPassword)
                        @Html.ValidationMessageFor(m => m.ConfirmPassword)
                    </div>
                </fieldset>
                <p>
                    <input type="submit" value="Register" />
                </p>
            </fieldset>
        </div>
    }
</div>
</section>

<script>
    function resize() {
        //$('#registerSection').height($(window).height() - 20 - 20 - 80 - 120 - 10 - 10);
    }
</script>